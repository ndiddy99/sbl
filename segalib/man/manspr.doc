*******************************************************************************
●ドキュメント種別	：各ライブラリ開発説明ファイル
●ファイル記号名称	：manspr.doc
●対象ライブラリ記号名称：spr
●対象ライブラリ名称	：スプライト
●バージョン　　	：1.02　
●作成者		：H.E
●作成日		：1994-10-4
●その他のメッセージ	：なし
*******************************************************************************

1.追加説明

１．１ スプライト表示基本処理ライブラリ

  なし

１．２ スプライト表示拡張処理ライブラリ

● spr_2c.c 内の以下の #define を変更してリコンパイルすると VRAM へのコマンド
   転送とキャラクタデータ転送を SCU-DMA を使用して行うことができます。
   #define  USE_DMA_LEVEL   n
      n = 0 : ＤＭＡを使用しない （デフォルト）
          1 : コマンド転送のみＤＭＡで行う
          2 : キャラクタデータ転送のみＤＭＡで行う
          3 : コマンドとキャラクタデータ両方の転送をＤＭＡで行う
   コマンド転送をＤＭＡで行う場合、一旦ワークエリアにコマンドを書き込み、まと
   めて転送しますが、その時のコマンド数を以下で定義します。
   ＳモデルのＤＭＡ転送では１回の転送サイズが２Ｋバイト以下までという制限があ
   るためコマンド数は８０となっています。
   #define  CMD_BUF_MAX     80

● ワークエリアサイズテーブルの追加
+-------------------------------------------------------+---------------------+
|ワークエリアサイズテーブル                             | SprAreaSize         |
+-------------------------------------------------------+---------------------+
struct SprAreaSize {
    Uint16         commandMax;           /* ｺﾏﾝﾄﾞｴﾘｱ登録可能数               */
    Uint16         gourTblMax;           /* ｸﾞｰﾛｰﾃｰﾌﾞﾙ登録可能数             */
    Uint16         lookupTblMax;         /* ｶﾗｰﾙｯｸｱｯﾌﾟﾃｰﾌﾞﾙ登録可能数        */
    Uint16         charMax;              /* ｷｬﾗｸﾀ登録可能数                  */
    Uint16         drawPrtyBlkMax;       /* 描画ﾌﾟﾗｲｵﾘﾃｨﾃｰﾌﾞﾙｴﾝﾄﾘ数          */
    Uint16         useCommandCount;      /* 現登録ｺﾏﾝﾄﾞ数                    */
    Uint16         charRemainBlkCount;   /* ｷｬﾗｸﾀｴﾘｱ合計空きﾌﾞﾛｯｸ数          */
    Uint16         charNullBlkMaxSize;   /* ｷｬﾗｸﾀ空きﾌﾞﾛｯｸ最大ｴﾘｱのﾌﾞﾛｯｸｻｲｽﾞ */
};

● SPR_2GetAreaSizeInfo ルーチン の追加
+-------------------------------------------------------+---------------------+
|ワークエリアサイズの取得                               | SPR_2GetAreaSizeInfo|
+-------------------------------------------------------+---------------------+
［書式］	void    SPR_2GetAreaSizeInfo(SprAreaSize  *areaSizeInfo);
［入力］	areaSizeInfo：ワークエリアサイズ通知エリアのアドレス。
［出力］	areaSizeInfo：現在のワークエリアサイズを通知。
［関数値］	なし
［機能］	初期化時に設定された各ワークエリアのサイズと使用状況を返します
　　　　　　　　。

● allocBlock ルーチン に次のバグがあったので修正しました。(Ver1.01バグ)
　獲得要求ブロック数と空きブロックのサイズが同一の場合に正しくアロケーションで
　きない。


１．３ スプライト３Ｄ表示ライブラリ

● ２ｎｄステップの３Ｄデータを３ｒｄステップで使用するには以下の項目を変更・
   追加する必要があります。
   (1) SprObject3D テーブルに以下の項目の追加と修正を行います。
       ・Uint16      **shdIdxTbl = NULL
             シェーディングインデックステーブルを使用しない場合は NULL にする
       ・Fixed32     surfNormK   = MTH_FIXED(1.0)
             面法線ベクトルの計算補正値
   (2) SprCluster テーブルに以下の項目の追加を行います。
       ・SprInbetInf *inbetInf   =  NULL
       	     ３Ｄオブジェクト間接続ポリゴン情報
       ・void        *transStart = NULL
             座標変換開始前ユーザコールバックルーチン
       ・void        *transEnd   = NULL
             座標変換終了後ユーザコールバックルーチン
       ・void        *context    = NULL
             ユーザコンテキストエリア

● ３ｒｄステップでは SPR_3SetView() ルーチンのパラメータが変更されているので
   注意して下さい。
   pivotViewPoint が無くなり替わりに ViewCoordPoint が追加になっています。
   次のように変更して下さい。
   2nd) SPR_3SetView(0, &viewPoint, &viewPoint, &viewAngle, ROT_SEQ_ZYX);
                        ^^^^^^^^^^^
   3rd) SPR_3SetView(0, &viewPoint, &viewAngle, ROT_SEQ_ZYX, 0);
                                                           ^^^


● 制限事項
   ・ＤＳＰからワークＲＡＭへの書き戻しが正常に動作しないためＤＳＰは使用して
     いません。従って、３Ｄスプライトワークエリア定義マクロで
     SPR_3USE_DOUBLE_BUF を指定しても実行速度は上がりません。
     ＤＳＰを使用するには MANMTH.DOC を参照してＭＴＨライブラリを修正して
     下さい。


2.機能・性能拡張予定

    なし


********************************** end of file ********************************
