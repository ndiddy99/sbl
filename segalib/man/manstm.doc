******************************************************************************
●ファイル記号名称		:manstm.doc
●対象ライブラリ記号名称	:stm
●対象ライブラリ名称		:ストリームシステムライブラリ
●バージョン			:1.16
●作成者			:H.T
●作成日			:1994-11-14
●その他のメッセージ		:なし
******************************************************************************

ストリームシステムライブラリVer. 1.10以降における注意事項

１．関数仕様の変更点
　Ver.1.01以前の関数は、以下のように置き換えてください。
(a) STM_Init()
　　Uint8	work[STM_WORK_SIZE(12, 24)];
              ・
              ・
　　STM_Init(12, 24, work);

(b) STM_OpenFid(grp, fid, &key), STM_OpenFrange(grp, &frange, &key)
    STM_OpenFid(grp, fid, &key, STM_LOOP_READ);
    STM_OpenFrange(grp, &frange, &key, STM_LOOP_READ);

(c) STM_SetTrBuf(stm, buf, BUF_SIZE)
　　STM_SetTrBuf(stm, buf, BUF_SIZE, STM_UNIT_WORD);

(d) STM_SetLoop(grp, stm)
　　ループ再生をする場合	STM_SetLoop(grp, stm, STM_LOOP_ENDLESS);
　　ループ再生をしない場合	STM_SetLoop(grp, stm, 1);

(e) エラー関数の第二引数にはエラーコードが渡されます。

(f) 即時復帰型サーバ実行グループの指定関数の追加	<Ver.1.16以降>
　　STM_SetExecGrp()はドライブがポーズ状態になるまで関数内で待機します。これに
　　よるアプリ側の処理の遅れを防ぐため、以下の関数を追加しました。
　　STM_NwSetExecGrp()を使用しない場合は、以下の変更による影響はありません。
	+--------------+-------------------------------+------------------------+
	|Title	　　　 |Function　　　　　　　　　　　 |Function Name		|
	|関数仕様　　　|ｻｰﾊﾞ実行ｸﾞﾙｰﾌﾟの指定(即時復帰) |STM_NwSetExecGrp	|
	+--------------+-------------------------------+------------------------+
	[書式]	　Bool	STM_NwSetExecGrp(StmGrpHn grp)
	[入力]	　grp	:ストリームグループハンドル
	[出力]	　なし
	[関数値]　処理が受け付けられた場合	　TRUE
		　処理が受け付けられなかった場合　FALSE
	[機能]
	 ストリームサーバが実行するグループを指定する。
	[備考]
	 (a) 処理を登録したら即時復帰する。
	 (b) ファイルシステム使用するため、NULLを指定した場合はドライブがポーズ状
	 　　態になることを確認した後、GFS関数を呼び出すこと。
	 (c) ドライブがポーズ状態になることを確認するには以下のように使用する。
	 		.
			.
		tsk = STM_NwSetExecGrp(grp);
		if (tsk == FALSE) {
		    return;
		}
		do {
		    stat = STM_ExecServer();
		    user();
		} while (stat != STM_EXEC_TSKEND);
			.
			.




	以下の関数仕様を変更します。
	+--------------+-------------------------------+------------------------+
	|Title	　　　 |Function　　　　　　　　　　　 |Function Name		|
	|関数仕様　　　|サーバの実行　　　　　 　　　　|STM_ExecServer		|
	+--------------+-------------------------------+------------------------+
	[書式]	　Sint32　STM_ExecServer(void)
	[入力]	　なし
	[出力]	　なし
	[関数値]　ストリームアクセス状態。即時復帰型関数を処理中の場合、関数ＩＤ。
		　エラーの場合エラーコード。
	[機能]
	 ストリームサーバを実行する。


	以下の定数を変更します。
	+--------------+-------------------------------+------------------------+
	|Title	　　　 |Data	　　　　　　　　　　　 |Data Name		|
	|データ仕様　　|ストリームアクセス状態 　　　　|StmAcStat		|
	+--------------+-------------------------------+------------------------+
	（１）ストリームアクセス状態
	+---------------------+---------------------------------+
	|	定数名	　　　|		　説　　明		|
	+---------------------+---------------------------------+
	| STM_EXEC_COMPLETED　|	アクセス終了			|
	+---------------------+---------------------------------+
	| STM_EXEC_PAUSE　　　|	アクセス一時停止中		|
	+---------------------+---------------------------------+
	| STM_EXEC_DOING　　　|	アクセス中			|
	+---------------------+---------------------------------+
	| STM_EXEC_WAIT	　　　|	取り出し待ち			|
	+---------------------+---------------------------------+
	| STM_EXEC_TSKEND　　 |	即時復帰型関数終了		|
	+---------------------+---------------------------------+

(g) STM_NwSetExecGrp() の追加にあわせて、STM_SetExecGrp() もBoolを返すようにしま
　　した。関数値の意味はSTM_NwSetExecGrpと同じです。		<Ver.1.16以降>


(h) リードエラー発生時のリカバリ関数の追加	<Ver.1.16以降>
　　STM_Recover() を追加しました。リードエラーが発生した場合に強制的に継続する
　　には、エラー関数内で以下のように呼び出してください。
	void	errfunc(void *obj, Sint32 ec)
	{
	    if (ec == STM_ERR_CDRD) {
	    	STM_Recover();
	    } else {
	    	.
		.
		.
	    }
	}

２．ループ再生時の動作
　　ピックアップが再生範囲の終端に達したとき、動作が以下のように異なります。

		　　　ピックアップが再生範囲の終端に達する
	　　　Ver.1.01以前	　　　｜	　　Ver.1.10以降
		　＋−−−−−−−−−＋−−−−−−−−＋
		　↓				　　　　↓
　ＣＤバッファ内の全データの取り出しを　ピックアップをループストリームに移動し
  完了するまでポーズする              　再生を開始する                        
		　↓				　　　　↓
  ステータスをSTM_EXEC_COMPLETEDとし、　STM_SetLoopの指定回数だけループしたら 
  取り出し先をリセットする            　取り出し先をリセットする
		　↓				　　　　↓
　ピックアップをループストリームに移動　ステータスをSTM_EXEC_COMPLETEDとする
  し再生を開始する


  Ver.1.01用に作成した左のプログラムは、上記の変更にかかわらず、右の様にSTM_Set
  Loop(grp, STM_LOOP_DFL, 1)を挿入することにより同様に動作させることができます。

  grp = STM_OpenGrp();                    grp = STM_OpenGrp();
  stm = STM_OpenFid(grp, FID1, &key);     stm = STM_OpenFid(grp, FID1, &key,
  STM_SetTrBuf(stm, buf, BUFSIZE1);                           STM_LOOP_READ);
  STM_SetExecGrp(grp);                    STM_SetTrBuf(stm, buf, BUFSIZE1, 
  for (i = 0; i < LOOPMAX; ) {                                STM_UNIT_WORD);
      stat = STM_ExecServer();            STM_SetLoop(grp, STM_LOOP_DFL, 1);
      if (stat == STM_EXEC_COMPLETED) {   STM_SetExecGrp(grp);
          i++;                            for (i = 0; i < LOOPMAX; ) {
      }                                       stat = STM_ExecServer();
      user();                                 if (stat == STM_EXEC_COMPLETED) {
  }                                               i++;
                                                  STM_SetLoop(grp,STM_LOOP_DFL,
						  			　　1);
					      }
                                              user();
					  }

３． Ver.1.01以前では、転送領域の設定→転送関数の登録→転送関数の消去をした場合
　　次の転送先は、初めに登録した転送領域でしたがVer.1.10 以降では、転送領域を設
　　定し直す必要があります。また、最大転送セクタ数、転送モードはデフォルト状態に
　　戻ります。

４．ストリームシステムを使用するためには、ファイルシステム及び、ＣＤ通信インタ
    フェースをリンクしなければなりません。

５．CD-ROM、バーチャルＣＤ、SIMM、SCSI上のすべてのファイルの取り扱いがsega_stm.
　　libで可能です。ただし、リンクするファイルシステムライブラリは使い分ける必要
　　があります。

６．sega_stm.hに変更があります。sega_stm.hをインクルードしているソースファイルを
　　すべて再コンパイルしてください。

７．注意事項
　(a) 取り出し関数を登録しているストリームのクローズ
　　　取り出し関数が(-1)を返した直後にストリームをクローズすると、取り出し関数が
　　　０以上の値を返すまで呼び続けます。取り出しを終えた時点で、０以上の値を返し
　　　てください

８．Ver.1.10以降のバグ修正
　　以下の修正は、ファイルシステムとセットで修正しています。ファイルシステムのバ
　　ージョン Ver.1.16 以降を使用してください。

　(Ver.1.11)
　・取り出し関数が(-1)または(0)を返す場合があるときの動作不良対策
　・再生範囲の終了位置直前に後方のストリームをオープンしたとき、ドライブが再生状
　　態のままＦＡＤが変化しなくなる現象の対策

　(Ver.1.12)
　・再生範囲の途中でバッファフルになるとループストリームに移動する現象の対策

　(Ver.1.13)
　・STM_SetExecGrp(NULL)を実行すると、暴走／無限ループ／ファイルシステムによるフ
　　ァイルアクセス拒否となる現象の対策

　(Ver.1.16)
　・ストリームシステムによる読み込み ->  ファイルシステムによる読み込み -> STM_S
　　etExecGrp(grp) -> STM_SetExecGrp(NULL) -> STM_SetExecGrp(grp)の順で処理された
　　場合、間違った範囲を再生する現象の対策
　・STM_SetExecGrp(grp) ->  STM_ExecServer() の間にSTM_GetExecStat(grp)を呼び出し
　　た場合、間違った範囲を再生する現象の対策
　・ストリームグループのアクセス状態がSTM_EXEC_COMPLETEDになった後、STM_GetLenTrB
　　ufを実行すると０を返す現象の対策。
　・読み込み中以外にSTM_MovePickupを実行した場合もSTM_EXEC_PAUSEになる現象の対策。

９．その他
　ファイルシステムとバージョンを合わせるためVer.1.13の後、Ver.1.16としました。

***************************** end of file ************************************

